####索引类型
b-tree索引(B+树)
顺序查询

适用
全值匹配
最左前缀匹配(匹配联合索引中的第一列的时候可以用到)
列前缀匹配
范围值匹配
order by (要求比较苛刻)

限制
如果不是按照索引的最左列开始查找，无法适用(联合索引)
不能跳过索引中的列(联合索引)
not in 和 <> 无法使用


hash索引(基于hash表)
精确匹配( = )
hash索引中的所有列， 存储引擎都会为每一行计算一个hash码

限制
hash只能二次查找
无法用于排序
不支持部分索引也不支持范围查找



####好处
索引减少存储引擎需要扫描的数据量
帮助排序避免使用临时表
把随机I/O变成顺序I/O

减少锁定的行数, 减少锁开销

####坏处
增加写操作的成本
过多的索引会增加查询优化器的选择时间







####usage
索引列上不能使用函数或者表达式


索引列的宽度有限制(前缀索引)


联合索引(经常用于查询的列放在最左边)








####索引检查
pt-duplicate_key_checker h=127.0.0.1

更新索引统计信息(可能会锁表)
analyze table table_name
optimize table table_name










