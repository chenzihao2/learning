####chsh
替换当前shell




####bash -x test.sh
调试模式




####env 显示环境变量




####test.sh  param1 param2 param3   传递参数
$#  参数的数目
$0  被运行的脚本的名称
$1  第一个参数


####seq
seq 1 100 输出1到100
seq 1 3 100 输出1到100 间隔3





test

#########################################################################
# File Name: test.sh
# Author: chenzihao
# Created Time: 2020年06月30日 星期二 14时28分09秒
#########################################################################
#!/usr/bin/zsh
message='hello\n world'
#echo -e $message
#echo -e "oh no \$message"   #双引号，解析变量
cmd=`pwd`   #反引号，执行命令
echo "now in $cmd"


#read -p 'please enter your name:' -n 5 name   #读入终端输入的值，空格隔开多个变量
#-p 提示信息    -n 5 5个字符限制    -s 隐藏输入内容
#echo -e "\nyour name is $name"
num=7
numm=8
let "result = num * numm"   #let    运算
echo $result

#使用环境变量
echo $SHELL
echo $OWNER

#使用参数 shift 跳跃到下一个参数
if [ -n $1 ]
then
    echo $1
fi
if [ $1 -eq $2 ]
then
    echo "$1 = $2"
elif [ $1 -gt $2 ]
then
    echo "$1 > $2"
else
    echo "$1 <= $2"
fi

#echo $0
#echo $1
#echo $2

#数组
array=('v1' 'v2' 'v3')
array[5]='v5'
echo ${array[5]}
echo ${array[*]}

#条件控制
#if [ 条件测试 ]    两边必须空一格
#then
#   do something
#elif [ 条件测试1 ]
#then
#   do something 1
#elif [ 条件测试2 ]
#then
#   do something 2
#else
#   do something else
#fi     判断结束
if [ ${array[5]} = 'v' ]
then
    echo 'it is true'
elif [ ${array[0]} = 'v1' ]
then
    echo 'v1 is true'
else
    echo 'it is false'
fi

if [ -e 'number' ] && [ ! -d 'number' ]
then
    echo 'number is file'
elif [ 'number' -nt 'r' ]
then
    echo 'number is newer'
fi

#条件测试

#测试字符串 
#$str1 = $str2  判断是否相同
#$str1 != $str2 判断是否不同
#-z $string      判断是否为空 zero
#-n $string      判断是否不为空
#
#测试数字
#$n1 -eq $n2    判断两个数字是否相等    equal
#$n1 -ne $n2    判断两个数字是否不相等  not equal
#$n1 -lt $n2    判断n1是否小于n2        lower than
#$n1 -le $n2    判断n1是否小于等于n2    lower or equal
#$n1 -gt $n2    判断n1是否大于n2        greater than
#$n1 -ge $n2    判断n1是否大于等于n2    greater or equal
#
#测试文件
#-e $file       判断文件是否存在        exist
#-d $file       判断文件是否是目录      directory
#-f $file       判断是否是一个文件      file
#-L $file       判断是否是一个符号链接  link
#-r $file       判断是否可读            read
#-w $file       判断是否可写            write
#-x $file       判断是否可执行          executable
#$file1 -nt $file2  判断文件1是否比文件2更新    newer then
#$file2 -ot $file2  判断文件1是否比文件2更旧    older then
#
#同时测试多个条件
#
#[ 条件测试1 ] && [ 条件测试2 ] 都为真
#[ 条件测试1 ] || [ 条件测试2 ] 有一个为真就为真
#[ ! -e $file] ! 反转
#
#
#case $1 in
#   "str1")
#       echo "llll"
#       ;;
#    "str2" | "str3")
#       echo "dsa"
#       ;;
#     *)
#       echo "all"
#       ll
#esac
#
#
#
#
#
#循环
#
#while
#
#while [ 条件测试 ]
#do
#   something
#done
while [ $0 = 100 ]
do
    echo "$1 = 100"
done

#until
#until [ 条件测试 ] 为假时执行命令
#do
#   echo
#done
until [ ! $0 = 1 ]
do
    echo "$1 = 100"
done


#for
#for $i in 'v1' 'v2' 'v3'
#do
#   something
#done
for i in ${array[*]}
do 
if [ $i = 'v1' ]
then
    echo $i
fi
done

for i in `seq 1 10`
do 
    echo $i
done

for i in `ls`
do
    touch $i
done


#函数
#函数名 () {
#   do something
#}
print_something () {
    echo "hello function $1"
    return 1
}
print_something good
echo $? #上一次函数的返回值







linux cmd for
1、for FILE in $(ls); do [COMMAND]; done
2、for a in {1..100}; do echo $RANDOM; done
3、for (( c=1; c<=5; c++ )); do echo $RANDOM; done
4、for ((c=1; c<21; c+=2)); do echo "Welcome $c times" ; done
5、for line in $(cat user.txt); do getent shadow $line; done
6、for FILE in $(cat file); do tar zcf $FILE.tar.gz $FILE;rm -rf $FILE; done
